(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{351:function(t,s,a){t.exports=a.p+"assets/img/vue.7491d99d.jpg"},384:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),n("h2",{attrs:{id:"描述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),n("p",[n("code",[t._v("Vue")]),t._v(" (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是， "),n("code",[t._v("Vue")]),t._v(" 被设计为可以自底向上逐层应用。 "),n("code",[t._v("Vue")]),t._v(" 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时， "),n("code",[t._v("Vue")]),t._v(" 也完全能够为复杂的单页应用提供驱动。")]),t._v(" "),n("p",[t._v("如果你想在深入学习 "),n("code",[t._v("Vue")]),t._v(" 之前对它有更多了解，我们制作了一个视频，带您了解其核心概念和一个示例工程。")]),t._v(" "),n("p",[t._v("如果你已经是有经验的前端开发者，想知道 "),n("code",[t._v("Vue")]),t._v(" 与其它库/框架有哪些区别，请查看对比其它框架。")]),t._v(" "),n("h2",{attrs:{id:"文件目录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#文件目录"}},[t._v("#")]),t._v(" 文件目录")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('build         webpack相关的配置\nconfig        项目中的webpack的开发模式和生产模式的设置\nnode_modules  存放js包依赖\ndist          存放生产环境打包后产生的文件\nsrc           你的程序存放的地方\n |---assets     存放项目静态文件\n |---components     存放组件\n |---router     存放vue-router\n |---store     存放vuex\n |---App.vue    跟页面，可以在main.js中改掉\n |---main.js    程序入口，在这可以配置Vue各种依赖\n static       项目外静态文件\n test         测试报告相关\n .babelrc     babel相关设置\n .editorconfig  编辑器代码规范配置\n .eslintignore  eslint语法检测相关的设置，设置不对哪些文件进行语法校验\n .eslintrc.js   eslint语法检测的设置\n .gitignore     git相关的配置，设置不提交哪些git\n .postcssrc.js  webpack的postcss插件对css处理的配置\n index.html     模板页面，vue-cli会向这里的id="app"标签注入vue程序\n package.json   js包依赖管理文件\n package-lock.json  js包管理文件,与package.json不同的是,它有明确的各依赖版本号，实际安装的结构，也有逻辑树的结构\n README.md    简介文件\n')])])]),n("h2",{attrs:{id:"生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),n("h3",{attrs:{id:"描述-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#描述-2"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),n("p",[t._v("在Vue的生命周期有几种钩子函数，开发人员通过钩子函数的方法实现在vue的不同生命周期阶段执行对应的命令。这里引用一个著名的图：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(351),alt:"vue",title:"vue生命周期"}})]),t._v(" "),n("h3",{attrs:{id:"生命周期函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生命周期函数"}},[t._v("#")]),t._v(" 生命周期函数")]),t._v(" "),n("div",{staticClass:"language-JavaScript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeCreate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在数据加载前触发。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("created")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在数据加载完成时候触发，此时data和method等已经可以访问到了。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeMount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在dom挂载之前触发，此时还不能访问到dom。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mounted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此时已经编译好模板，并且挂载到dom上。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在视图更新前触发，此时还没有开始更新dom，但是数据已经改变了。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updated")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在视图已经更新完毕的时候触发，此时dom已经完成了更新。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeDestroy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在当前组件销毁前触发，此时组件内的内容还是可以访问的。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("destroyed")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在当前组件销毁完成时候触发，在调用之后，vue会把当前组件所有的东西解绑、移除事件等、销毁实例等。")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);